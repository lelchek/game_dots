{"version":3,"sources":["components/formGame/formGame.module.css","app.module.css","components/formGame/FormGame.js","components/playingField/PlayingField.js","components/leaderBoard/Winner.js","components/leaderBoard/LeaderBoard.js","services.js","App.js","index.js","components/leaderBoard/leaderBoard.module.css"],"names":["module","exports","FormGame","state","selectMode","userName","handleChange","e","target","name","props","drawField","value","setState","handleSubmit","preventDefault","startPlay","this","optionsSelect","buttonPlay","disabled","className","css","container","onSubmit","select","required","onChange","map","option","key","label","input","placeholder","button","type","Component","PlayingField","playingCell","playerWin","computerWin","winner","choicePlayCell","arrayCellsNotPlay","arrayCells","filter","id","includes","indexForPlay","randomIndexOfCells","length","idPlayingCell","isWinner","winnerCheck","playCell","document","getElementById","startGame","winnerRecord","prevState","timer","winnerRating","Math","floor","fieldSize","max","random","setTimeout","playerLose","delay","prevstate","prevProps","inlineStyle","gridTemplateColumns","gridTemplateRows","style","cell","onClick","Winner","date","item","span","LeaderBoard","winners","list","axios","get","data","console","log","Error","obj","post","moment","require","App","gameMode","selectModeSelect","getGameMode","a","services","Object","keys","getWinners","postWinner","objWinner","stopPlay","createArrayCells","field","arrayCellsLength","i","shortId","idWinner","dateWinner","Date","format","containerApp","playingFieldOverley","playerMove","ReactDOM","render"],"mappings":"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","file":"static/js/main.ca4b3438.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"formGame_container__3iGvB\",\"select\":\"formGame_select__hzlFZ\",\"input\":\"formGame_input__2tYWX\",\"button\":\"formGame_button__1NeSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerApp\":\"app_containerApp__wU_U7\",\"playingFieldOverley\":\"app_playingFieldOverley__2cU6h\"};","import React, { Component } from \"react\";\r\nimport css from \"./formGame.module.css\";\r\n\r\nclass FormGame extends Component {\r\n  state = {\r\n    selectMode: \"\",\r\n    userName: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    if (e.target.name === \"selectMode\") {\r\n      this.props.drawField(e.target.value);\r\n    }\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { userName } = this.state;\r\n    e.preventDefault();\r\n    this.props.startPlay(userName);\r\n  };\r\n\r\n  render() {\r\n    const { selectMode, userName } = this.state;\r\n    const { optionsSelect, buttonPlay, disabled } = this.props;\r\n    return (\r\n      <div className={css.container}>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <select\r\n            className={css.select}\r\n            required\r\n            name=\"selectMode\"\r\n            onChange={this.handleChange}\r\n            value={selectMode}\r\n          >\r\n            <option value=\"\" disabled>\r\n              Pick game mode\r\n            </option>\r\n            {optionsSelect.map(option => {\r\n              return (\r\n                <option key={option} value={option} label={option}>\r\n                  {option}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <input\r\n            className={css.input}\r\n            required\r\n            name=\"userName\"\r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter your name\"\r\n            value={userName}\r\n          ></input>\r\n          <button className={css.button} type=\"submit\" disabled={disabled}>\r\n            {buttonPlay}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormGame;\r\n","import React, { Component } from \"react\";\r\nimport \"./playingField.css\";\r\n\r\nclass PlayingField extends Component {\r\n  state = {\r\n    playingCell: [],\r\n    playerWin: 0,\r\n    computerWin: 0,\r\n    winner: \"\"\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.startGame && this.props.startGame !== prevProps.startGame) {\r\n      this.setState({\r\n        playingCell: [],\r\n        playerWin: 0,\r\n        computerWin: 0,\r\n        winner: \"\"\r\n      });\r\n      this.choicePlayCell();\r\n    }\r\n  }\r\n\r\n  choicePlayCell = () => {\r\n    let arrayCellsNotPlay = this.props.arrayCells.filter(\r\n      id => !this.state.playingCell.includes(id)\r\n    );\r\n    let indexForPlay = this.randomIndexOfCells(arrayCellsNotPlay.length - 1);\r\n    let idPlayingCell = arrayCellsNotPlay[indexForPlay];\r\n    let isWinner = this.winnerCheck();\r\n    const playCell = document.getElementById(arrayCellsNotPlay[indexForPlay]);\r\n    if (arrayCellsNotPlay.length > 0 && this.props.startGame) {\r\n      if (!isWinner) {\r\n        playCell.className = \"cellChoice\";\r\n        this.setState(prevState => {\r\n          return {\r\n            playingCell: [...prevState.playingCell, idPlayingCell]\r\n          };\r\n        });\r\n        this.timer(playCell);\r\n      } else {\r\n        this.props.winnerRecord(this.state.winner);\r\n        this.setState({ playerWin: 0, computerWin: 0 });\r\n      }\r\n    } else if (\r\n      this.state.playerWin === this.state.computerWin &&\r\n      arrayCellsNotPlay.length === 0\r\n    ) {\r\n      this.setState({ winner: \"No Winner\" });\r\n      this.props.winnerRecord(this.state.winner);\r\n    }\r\n  };\r\n\r\n  winnerCheck = () => {\r\n    const winnerRating =\r\n      Math.floor((this.props.fieldSize * this.props.fieldSize) / 2) + 1;\r\n    if (this.state.playerWin === winnerRating) {\r\n      this.setState({ winner: this.props.userName });\r\n      return true;\r\n    } else if (this.state.computerWin === winnerRating) {\r\n      this.setState({ winner: \"Computer\" });\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  randomIndexOfCells = max => {\r\n    return Math.floor(Math.random() * (max + 1));\r\n  };\r\n\r\n  timer = playCell => {\r\n    setTimeout(() => {\r\n      this.playerLose(playCell);\r\n    }, this.props.delay);\r\n  };\r\n\r\n  playerWin = e => {\r\n    if (e.target.className === \"cellChoice\") {\r\n      e.target.className = \"cellWin\";\r\n      this.setState(prevstate => {\r\n        return { playerWin: prevstate.playerWin + 1 };\r\n      });\r\n    }\r\n  };\r\n\r\n  playerLose = playCell => {\r\n    if (playCell.className !== \"cellWin\") {\r\n      playCell.className = \"cellLose\";\r\n      this.setState(prevstate => {\r\n        return { computerWin: prevstate.computerWin + 1 };\r\n      });\r\n    }\r\n    this.choicePlayCell();\r\n  };\r\n\r\n  render() {\r\n    const { winner } = this.state;\r\n    const { fieldSize, arrayCells } = this.props;\r\n\r\n    const inlineStyle = {\r\n      gridTemplateColumns: `repeat(${fieldSize}, 1fr)`,\r\n      gridTemplateRows: `repeat(${fieldSize}, 1fr)`\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"overleyTitle\">{winner && <h2>{winner} is Win</h2>}</div>\r\n        <div className=\"containerField\" style={inlineStyle}>\r\n          {arrayCells.map(cell => (\r\n            <div\r\n              key={cell}\r\n              id={cell}\r\n              onClick={this.playerWin}\r\n              className=\"cellDefault\"\r\n            ></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayingField;\r\n","import React from \"react\";\r\nimport css from \"./leaderBoard.module.css\";\r\n\r\nconst Winner = ({ winner, date }) => (\r\n  <>\r\n    <li className={css.item}>\r\n      <span className={css.span}>{winner}</span>\r\n      <span className={css.span}>{date}</span>\r\n    </li>\r\n  </>\r\n);\r\n\r\nexport default Winner;\r\n","import React from \"react\";\r\nimport Winner from \"./Winner\";\r\nimport css from \"./leaderBoard.module.css\";\r\n\r\nconst LeaderBoard = ({ winners }) => (\r\n  <div>\r\n    <h2>Leader Board</h2>\r\n    <ul className={css.list}>\r\n      {winners.map(winner => (\r\n        <Winner key={winner.id} winner={winner.winner} date={winner.date} />\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default LeaderBoard;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  async getMode() {\r\n    try {\r\n      const data = await axios.get(\r\n        \"https://starnavi-frontend-test-task.herokuapp.com/game-settings\"\r\n      );\r\n      return data.data;\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  },\r\n  async getWinners() {\r\n    try {\r\n      const data = await axios.get(\r\n        \"https://starnavi-frontend-test-task.herokuapp.com/winners\"\r\n      );\r\n      return data.data;\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  },\r\n  async postWinners(obj) {\r\n    try {\r\n      const data = await axios.post(\r\n        \"https://starnavi-frontend-test-task.herokuapp.com/winners\",\r\n        obj\r\n      );\r\n      console.log(\"data\", data);\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\nimport shortId from \"shortid\";\nimport FormGame from \"./components/formGame/FormGame\";\nimport PlayingField from \"./components/playingField/PlayingField\";\nimport LeaderBoard from \"./components/leaderBoard/LeaderBoard\";\nimport services from \"./services\";\nimport css from \"./app.module.css\";\nvar moment = require(\"moment\");\n\nclass App extends Component {\n  state = {\n    winners: [],\n    userName: \"\",\n    optionsSelect: [],\n    gameMode: {},\n    selectMode: {},\n    selectModeSelect: \"\",\n    startGame: false,\n    arrayCells: [],\n    buttonPlay: \"Play\"\n  };\n\n  componentDidMount() {\n    this.getGameMode();\n    this.getWinners();\n  }\n  componentDidUpdate() {}\n\n  getGameMode = async () => {\n    const gameMode = await services.getMode();\n    const optionsSelect = Object.keys(gameMode);\n    this.setState({ optionsSelect, gameMode });\n  };\n\n  getWinners = async () => {\n    const winners = await services.getWinners();\n    this.setState({ winners });\n  };\n\n  postWinner = async objWinner => {\n    await services.postWinners(objWinner);\n  };\n\n  startPlay = userName => {\n    this.drawField(this.state.selectModeSelect);\n    this.setState({\n      userName,\n      startGame: true\n    });\n  };\n\n  stopPlay = () => {\n    this.setState({ startGame: false });\n  };\n\n  drawField = selectModeSelect => {\n    const fieldSize = this.state.gameMode[selectModeSelect];\n    this.setState({\n      selectModeSelect,\n      selectMode: fieldSize,\n      startGame: false\n    });\n    this.createArrayCells(fieldSize);\n  };\n\n  createArrayCells = ({ field }) => {\n    let arrayCells = [];\n    const arrayCellsLength = field * field;\n    for (let i = 0; i < arrayCellsLength; i++) {\n      arrayCells = [...arrayCells, shortId()];\n    }\n    this.setState({ arrayCells });\n  };\n\n  winnerRecord = async winner => {\n    const idWinner = Math.random();\n    const dateWinner = moment(new Date()).format(\"HH:mm DD MMMM YYYY\");\n    const objWinner = {\n      id: idWinner,\n      winner: winner,\n      date: dateWinner\n    };\n    this.setState({ buttonPlay: \"Play Again\" });\n    this.stopPlay();\n    await this.postWinner(objWinner);\n    await this.getWinners();\n  };\n\n  render() {\n    const {\n      optionsSelect,\n      winners,\n      selectMode,\n      arrayCells,\n      startGame,\n      userName,\n      buttonPlay\n    } = this.state;\n    return (\n      <div className={css.containerApp}>\n        <div className={css.playingFieldOverley}>\n          <FormGame\n            optionsSelect={optionsSelect}\n            startPlay={this.startPlay}\n            drawField={this.drawField}\n            buttonPlay={buttonPlay}\n            disabled={startGame}\n          />\n          <PlayingField\n            fieldSize={selectMode.field}\n            arrayCells={arrayCells}\n            playerMove={this.playerMove}\n            delay={selectMode.delay}\n            startGame={startGame}\n            userName={userName}\n            winnerRecord={this.winnerRecord}\n            stopPlay={this.stopPlay}\n          />\n        </div>\n        <LeaderBoard winners={winners} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"leaderBoard_list__32KGH\",\"item\":\"leaderBoard_item__1FQj0\",\"span\":\"leaderBoard_span__3c8zi\"};"],"sourceRoot":""}